package VentanasGUI;

import Model.Controladora;
import Model.Consulta;
import Model.Paciente;
import java.awt.Color;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 * Esta clase representa una ventana de la interfaz gráfica de usuario que
 * permite ver las consultas anteriores de un paciente.
 *
 * @author yairc
 */
public class VerConsultasAnteriores extends javax.swing.JFrame {

    private Controladora control;
    private Paciente paciente;

    /**
     * Constructor de la clase VerConsultasAnteriores
     *
     * @param control
     * @param paciente
     */
    public VerConsultasAnteriores(Controladora control, Paciente paciente) {
        initComponents();
        this.control = control;
        this.paciente = paciente;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConsAnteriores = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jlbVolver = new javax.swing.JLabel();
        txtConsultasAnt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaConsAnteriores.setBackground(new java.awt.Color(149, 210, 255));
        tablaConsAnteriores.setForeground(new java.awt.Color(0, 0, 0));
        tablaConsAnteriores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaConsAnteriores);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 1113, 354));

        jPanel3.setBackground(new java.awt.Color(149, 210, 255));

        jlbVolver.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jlbVolver.setForeground(new java.awt.Color(0, 0, 0));
        jlbVolver.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbVolver.setText("Volver");
        jlbVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbVolver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbVolverMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jlbVolverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jlbVolverMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jlbVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jlbVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 90, 30));

        txtConsultasAnt.setBackground(new java.awt.Color(0, 204, 204));
        txtConsultasAnt.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 36)); // NOI18N
        txtConsultasAnt.setForeground(new java.awt.Color(0, 0, 0));
        txtConsultasAnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtConsultasAnt.setText("Consultas Anteriores");
        txtConsultasAnt.setToolTipText("");
        jPanel1.add(txtConsultasAnt, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 410, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cruz.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1152, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   /**
     * Este método se ejecuta cuando se abre la ventana. Llama al método
     * cargarTabla para llenar la tabla con datos.
     *
     * @param evt El evento de ventana que ocurrió.
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // Llamamos al método cargarTabla para llenar la tabla con datos
            cargarTabla();
        } catch (Exception e) {
            // Si ocurre un error, mostramos un mensaje de error
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened

    private void jlbVolverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbVolverMouseClicked
         try {
            // Creamos una nueva instancia de la ventana DatosDePaciente
            DatosDePaciente histCli = new DatosDePaciente(control, paciente);
            // Hacemos visible la ventana
            histCli.setVisible(true);
            // Centramos la ventana en la pantalla
            histCli.setLocationRelativeTo(null);
            // Cerramos la ventana actual
            this.dispose();
        } catch (Exception e) {
            // Si ocurre un error, mostramos un mensaje de error
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_jlbVolverMouseClicked

    private void jlbVolverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbVolverMouseEntered
        jlbVolver.setForeground(Color.white);
    }//GEN-LAST:event_jlbVolverMouseEntered

    private void jlbVolverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbVolverMouseExited
        jlbVolver.setForeground(Color.black);
    }//GEN-LAST:event_jlbVolverMouseExited
    /**
     * Este método carga datos en la tabla. Obtiene una lista de consultas del
     * paciente y añade cada consulta a la tabla.
     *
     * @param evt El evento de ventana que ocurrió.
     */
    private void cargarTabla() {
        try {
            // Creamos un nuevo modelo de tabla

            DefaultTableModel modeloTabla = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    // Todas las celdas son falsas, es decir, no editables.
                    return false;
                }
            };

            // Definimos los títulos de las columnas de la tabla
            String titutlos[] = {"Medico num mat", "Fecha", "Hora", "Motivo Consulta", "Diagnostico"};
            modeloTabla.setColumnIdentifiers(titutlos);
            // Obtenemos la lista de consultas del paciente
            List<Consulta> listCon = this.paciente.getConsultas();
            if (listCon != null) {
                // Si la lista de consultas no es nula, recorremos la lista
                for (Consulta con : listCon) {
                    // Creamos un objeto con los datos de la consulta
                    Object[] objeto = {con.getMedico().getNumMat(), con.getFecha(), con.getHora(), con.getMotivo(), con.getDiagnConsulta()};

                    // Añadimos el objeto a la tabla
                    modeloTabla.addRow(objeto);
                }
            }
            // Establecemos el modelo de la tabla
            tablaConsAnteriores.setModel(modeloTabla);
        } catch (Exception e) {
            // Si ocurre un error, mostramos un mensaje de error
            System.out.println("Error: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbVolver;
    private javax.swing.JTable tablaConsAnteriores;
    private javax.swing.JLabel txtConsultasAnt;
    // End of variables declaration//GEN-END:variables
}
