package VentanasGUI;

import Model.Controladora;
import Model.Consulta;
import Model.Paciente;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 * Esta clase representa una ventana de la interfaz gráfica de usuario que
 * permite ver las consultas anteriores de un paciente.
 *
 * @author yairc
 */
public class VerConsultasAnteriores extends javax.swing.JFrame {

    private Controladora control;
    private Paciente paciente;

    /**
     * Constructor de la clase VerConsultasAnteriores
     *
     * @param control
     * @param paciente
     */
    public VerConsultasAnteriores(Controladora control, Paciente paciente) {
        initComponents();
        this.control = control;
        this.paciente = paciente;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConsAnteriores = new javax.swing.JTable();
        btnVolver = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtConsultasAnt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaConsAnteriores.setBackground(new java.awt.Color(255, 255, 255));
        tablaConsAnteriores.setForeground(new java.awt.Color(0, 0, 0));
        tablaConsAnteriores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaConsAnteriores);

        btnVolver.setBackground(new java.awt.Color(0, 153, 153));
        btnVolver.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(0, 0, 0));
        btnVolver.setText("Volver");
        btnVolver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));

        txtConsultasAnt.setBackground(new java.awt.Color(0, 204, 204));
        txtConsultasAnt.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        txtConsultasAnt.setForeground(new java.awt.Color(0, 0, 0));
        txtConsultasAnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtConsultasAnt.setText("Consultas Anteriores");
        txtConsultasAnt.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtConsultasAnt, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(txtConsultasAnt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Este método se ejecuta cuando se hace clic en el botón 'Volver'. Cierra
     * la ventana actual y abre una nueva instancia de la ventana
     * DatosDePaciente.
     *
     * @param evt El evento de ventana que ocurrió.
     */
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        try {
            // Creamos una nueva instancia de la ventana DatosDePaciente
            DatosDePaciente histCli = new DatosDePaciente(control, paciente);
            // Hacemos visible la ventana
            histCli.setVisible(true);
            // Centramos la ventana en la pantalla
            histCli.setLocationRelativeTo(null);
            // Cerramos la ventana actual
            this.dispose();
        } catch (Exception e) {
            // Si ocurre un error, mostramos un mensaje de error
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnVolverActionPerformed
    /**
     * Este método se ejecuta cuando se abre la ventana. Llama al método
     * cargarTabla para llenar la tabla con datos.
     *
     * @param evt El evento de ventana que ocurrió.
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // Llamamos al método cargarTabla para llenar la tabla con datos
            cargarTabla();
        } catch (Exception e) {
            // Si ocurre un error, mostramos un mensaje de error
            System.out.println("Error: " + e.getMessage());
        }
    }//GEN-LAST:event_formWindowOpened
    /**
     * Este método carga datos en la tabla. Obtiene una lista de consultas del
     * paciente y añade cada consulta a la tabla.
     *
     * @param evt El evento de ventana que ocurrió.
     */
    private void cargarTabla() {
        try {
            // Creamos un nuevo modelo de tabla
            DefaultTableModel modeloTabla = new DefaultTableModel();
            // Definimos los títulos de las columnas de la tabla
            String titutlos[] = {"Medico", "Fecha", "Hora", "Diagnostico"};
            modeloTabla.setColumnIdentifiers(titutlos);
            // Obtenemos la lista de consultas del paciente
            List<Consulta> listCon = this.paciente.getConsultas();
            if (listCon != null) {
                // Si la lista de consultas no es nula, recorremos la lista
                for (Consulta Con : listCon) {
                    // Creamos un objeto con los datos de la consulta
                    Object[] objeto = {Con.getMedico().getNumMat(), Con.getFecha(), Con.getHora(), Con.getDiagnConsulta()};

                    // Añadimos el objeto a la tabla
                    modeloTabla.addRow(objeto);
                }
            }
            // Establecemos el modelo de la tabla
            tablaConsAnteriores.setModel(modeloTabla);
        } catch (Exception e) {
            // Si ocurre un error, mostramos un mensaje de error
            System.out.println("Error: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVolver;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaConsAnteriores;
    private javax.swing.JLabel txtConsultasAnt;
    // End of variables declaration//GEN-END:variables
}
