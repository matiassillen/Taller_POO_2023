/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package VentanasGUI;

import Model.AdministradorDeSistema;
import Model.Controladora;
import Model.Rol;
import Model.Usuario;
import Persistencia.ControladoraPersistencia;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Matías Sillen Ríos
 */
public class EditarUsuario extends javax.swing.JFrame {

    Controladora control;
    ControladoraPersistencia controlPersis;
    long idUsuario;
    String rolUusario;
//    GestoresHospital gestor;
//    Recepcionista recepcionista;
//    Medico medico;
//    LicEnEnfermeria licenciado;
    AdministradorDeSistema administrador;
//      FuncionarioGeneral funcionarioGeneral;
//    AdministradorDeSistema admin;
    Usuario usuario;

    /**
     * Creates new form EditarUsuario
     * @param control
     * @param idUsuario
     * @param rolUsuario
     */
    public EditarUsuario(Controladora control, long idUsuario) {
        administrador = new AdministradorDeSistema();
        control = new Controladora();
        controlPersis = new ControladoraPersistencia();
        this.idUsuario = idUsuario;
        this.control = new Controladora();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        txtContrasenia = new javax.swing.JPasswordField();
        cbTomarPaciente = new javax.swing.JCheckBox();
        cbTriagiador = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        cmbRol = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(100, 196, 244));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Editar Usuario");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel1)
                .addContainerGap(432, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Nombre Usuario:");

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Contraseña:");

        txtNombreUsuario.setBackground(new java.awt.Color(255, 255, 255));
        txtNombreUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtNombreUsuario.setForeground(new java.awt.Color(0, 0, 0));

        txtContrasenia.setBackground(new java.awt.Color(255, 255, 255));
        txtContrasenia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtContrasenia.setForeground(new java.awt.Color(0, 0, 0));

        cbTomarPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTomarPaciente.setForeground(new java.awt.Color(0, 0, 0));
        cbTomarPaciente.setText("Tomar Paciente");

        cbTriagiador.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTriagiador.setForeground(new java.awt.Color(0, 0, 0));
        cbTriagiador.setText("Triagiador");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Rol:");

        cmbRol.setBackground(new java.awt.Color(255, 255, 255));
        cmbRol.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbRol.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTomarPaciente)
                            .addComponent(cmbRol, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTriagiador))))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cmbRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbTomarPaciente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbTriagiador)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnGuardar.setBackground(new java.awt.Color(100, 196, 244));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(0, 0, 0));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(btnGuardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

//        String nombre = txtNombre.getText();
//        String apellido = txtApellido.getText();
//        String FechaNacimiento = txtFechaNacimiento.getText();
//        int documento = Integer.parseInt(txtDni.getText());
//        String domicilio = txtDomicilio.getText();
//        String telFijo = txtTelFijo.getText();
//        String telCel = txtTelCel.getText();
//        String correoE = txtCorreoE.getText();
//        String estadoCivil = (String) cbEstadoCivil.getSelectedItem();

        String nombreUsuario = txtNombreUsuario.getText();
        String contrasenia = txtContrasenia.getText();
        String rolUsu = (String) cmbRol.getSelectedItem();

<<<<<<< HEAD
        Rol rol = new Rol();
        rol.setNombre(rolUsu);

        List<Rol> roles = new ArrayList<>();
        roles.add(rol);

        if (rolUsu.equalsIgnoreCase("Medico")) {
            cbTomarPaciente.setSelected(true);
            cbTriagiador.setSelected(true);

            if (cbTomarPaciente.isSelected()) {
                rol.setNombre("Tomar Paciente");
                roles.add(rol);
            }

            if (cbTriagiador.isSelected()) {
                rol.setNombre("Triagiador");
                roles.add(rol);
            }

        }

        administrador.editarUsuario(usuario, nombreUsuario, contrasenia, roles);

        mostrarMensaje("Usuario editado correctamente", "Info", "Edición exitosa");
=======
//        administrador.editarUsuario(gestor, recepcionista, medico, licenciado, admin, nombre, apellido, FechaNacimiento, documento, domicilio, telFijo, telCel,
//                correoE, estadoCivil, nombreUsuario, contrasenia, rol, numMatricula);
//
//        mostrarMensaje("Usuario editado correctamente", "Info", "Edición exitosa");
>>>>>>> f1b2a889c99d5a30cb19cdc03a672a061b0e52e6
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       
        cbTomarPaciente.setSelected(false);
        cbTriagiador.setSelected(false);

        usuario = control.traerUsuario(idUsuario);

<<<<<<< HEAD
        txtNombreUsuario.setText(usuario.getNomUsuario());
        txtContrasenia.setText(usuario.getPassw());
        
        
        //cmbRol.setSelectedValue(usuario.getRol());
        //cargar roles de forma genérica
=======
//            gestor = control.traerGestor(idUsuario);
//            txtNombreUsuario.setText(gestor.getNomUsuario());
//            txtContrasenia.setText(gestor.getPassw());

            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();

//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }

            //Marcar/Selecionar el rol del usuario
            String rol = gestor.getRol().getNombre();

            int cantidadItems = cbRol.getItemCount();

            for (int i = 0; i < cantidadItems; i++) {
                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
                    cbRol.setSelectedIndex(i);
                }
            }
        }
        
//        if (rolUsuario.equalsIgnoreCase("Recepcionista")) {
//            //Buscar el Recepcionista
//
//            recepcionista = control.traerRecepcionista(idUsuario);
//            txtNombreUsuario.setText(recepcionista.getNomUsuario());
//            txtContrasenia.setText(recepcionista.getPassw());
//
//            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();

//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
//            String rol = recepcionista.getRol().getNombre();
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
//        }
//        
//        if (rolUsuario.equalsIgnoreCase("Medico")) {
//            //Buscar el Recepcionista
//
//            medico = control.traerMedico(idUsuario);
//            txtNombreUsuario.setText(medico.getNomUsuario());
//            txtContrasenia.setText(medico.getPassw());
//
//            //cargar roles de forma genérica
>>>>>>> f1b2a889c99d5a30cb19cdc03a672a061b0e52e6
//            List<Rol> listaRoles = control.traerRoles();
//
//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
<<<<<<< HEAD
//            String rol = funcionarioGeneral.getRol().getNombre();
=======
//            String rol = medico.getRol().getNombre();
>>>>>>> f1b2a889c99d5a30cb19cdc03a672a061b0e52e6
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
<<<<<<< HEAD
=======
//        }
//        
//        if (rolUsuario.equalsIgnoreCase("Licenciado en Enfermeria")) {
//            //Buscar el Recepcionista
//
//            licenciado = control.traerLicEnEnfermeria(idUsuario);
//            txtNombreUsuario.setText(licenciado.getNomUsuario());
//            txtContrasenia.setText(licenciado.getPassw());
//
//            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();
//
//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
//            String rol = licenciado.getRol().getNombre();
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
//        }
//        
//        if (rolUsuario.equalsIgnoreCase("Administrador de Sistema")) {
//            //Buscar el Recepcionista
//
//            admin = control.traerAdministradorDeSitema(idUsuario);
//            txtNombreUsuario.setText(admin.getNomUsuario());
//            txtContrasenia.setText(admin.getPassw());
//
//            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();
//
//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
//            String rol = admin.getRol().getNombre();
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
//        }
>>>>>>> f1b2a889c99d5a30cb19cdc03a672a061b0e52e6

//        if (rolUsuario.equalsIgnoreCase("Recepcionista")) {
//            //Buscar el Recepcionista
//
//            recepcionista = control.traerRecepcionista(idUsuario);
//            txtNombreUsuario.setText(recepcionista.getNomUsuario());
//            txtContrasenia.setText(recepcionista.getPassw());
//
//            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();
//
//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
//            String rol = recepcionista.getRol().getNombre();
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
//        }
//        
//        if (rolUsuario.equalsIgnoreCase("Medico")) {
//            //Buscar el Recepcionista
//
//            medico = control.traerMedico(idUsuario);
//            txtNombreUsuario.setText(medico.getNomUsuario());
//            txtContrasenia.setText(medico.getPassw());
//
//            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();
//
//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
//            String rol = medico.getRol().getNombre();
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
//        }
//        
//        if (rolUsuario.equalsIgnoreCase("Licenciado en Enfermeria")) {
//            //Buscar el Recepcionista
//
//            licenciado = control.traerLicEnEnfermeria(idUsuario);
//            txtNombreUsuario.setText(licenciado.getNomUsuario());
//            txtContrasenia.setText(licenciado.getPassw());
//
//            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();
//
//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
//            String rol = licenciado.getRol().getNombre();
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
//        }
//        
//        if (rolUsuario.equalsIgnoreCase("Administrador de Sistema")) {
//            //Buscar el Recepcionista
//
//            admin = control.traerAdministradorDeSitema(idUsuario);
//            txtNombreUsuario.setText(admin.getNomUsuario());
//            txtContrasenia.setText(admin.getPassw());
//
//            //cargar roles de forma genérica
//            List<Rol> listaRoles = control.traerRoles();
//
//            if (listaRoles != null) {
//                for (Rol rol : listaRoles) {
//                    cbRol.addItem(rol.getNombre());
//                }
//            }
//
//            //Marcar/Selecionar el rol del usuario
//            String rol = admin.getRol().getNombre();
//
//            int cantidadItems = cbRol.getItemCount();
//
//            for (int i = 0; i < cantidadItems; i++) {
//                if (String.valueOf(cbRol.getItemAt(i)).equalsIgnoreCase(rol)) {
//                    cbRol.setSelectedIndex(i);
//                }
//            }
//        }
//        jLabelNumMatricula.setVisible(false);
//        txtNumMatricula.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    public void mostrarMensaje(String mensaje, String tipo, String titulo) {
        JOptionPane optionPane = new JOptionPane(mensaje);
        if (tipo.equals("info")) {
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        } else if (tipo.equals("Error")) {
            optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
        }
        JDialog dialog = optionPane.createDialog(titulo);
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JCheckBox cbTomarPaciente;
    private javax.swing.JCheckBox cbTriagiador;
    private javax.swing.JComboBox<String> cmbRol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField txtContrasenia;
    private javax.swing.JTextField txtNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
